/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode insertGreatestCommonDivisors(ListNode head) {
        List<Integer> l=new ArrayList<>();
        List<Integer> g=new ArrayList<>();
        ListNode curr=head;
        while(curr!=null){
            l.add(curr.val);
            curr=curr.next;
        }
        for(int i=0;i<l.size()-1;i++){
            int a=l.get(i);
            int b=l.get(i+1);
            g.add(gcd(a,b));
        }
        List<Integer> res=new ArrayList<>();
        for(int i=0;i<l.size()-1;i++){
            res.add(l.get(i));
            res.add(g.get(i));
        }
        res.add(l.get(l.size()-1));
        // make linked list from res
        curr=new ListNode(res.get(0));
        head=curr;
        for(int i=1;i<res.size();i++){
            ListNode temp=new ListNode(res.get(i));
            curr.next=temp;
            curr=curr.next;
        }
        return head;
    }
    public int gcd(int a, int b){
        if(b==0) return a;
        return gcd(b,a%b);
    }
}
