/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        List<Integer> res=new ArrayList<>();
        if(root==null)
        return res;
        q.offer(root);
        while(!q.isEmpty()){
        List<Integer> l=new ArrayList<>();
            int n=q.size();
            for(int i=0;i<n;i++){
                TreeNode x=q.poll();
                l.add(x.val);
                if(x.left!=null){
                    q.offer(x.left);
                }
                if(x.right!=null){
                    q.offer(x.right);
                }
            }
            int max=Integer.MIN_VALUE;
            for(int i=0;i<l.size();i++){
                max=Math.max(max,l.get(i));
            }
            res.add(max);
            l.clear();
        }
        return res;
    }
}
