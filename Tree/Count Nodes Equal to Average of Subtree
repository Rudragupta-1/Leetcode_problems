/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public int averageOfSubtree(TreeNode root) {
        function(root);
        return ans;
    }
    int ans=0;
    public int[] function(TreeNode root){
        if(root==null) return new int[]{0,0};
        int l[]=function(root.left);
        int r[]=function(root.right);
        int sum=l[0]+r[0]+root.val;
        int count=l[1]+r[1]+1;
        if(sum/count==root.val) ans++;
        return new int[]{sum,count};
    }
}
