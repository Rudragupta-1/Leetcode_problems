/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        List<Double> l=new ArrayList<>();
        if(root==null) return l;
        if(root!=null &&( root.left==null && root.right==null)) {
            l.add((double)root.val);
            return l;
        }
        while(!q.isEmpty()){
            int n=q.size();
            double avg=0;
            for(int i=0;i<n;i++){
                TreeNode x=q.poll();
                if(x.left!=null){
                    q.offer(x.left);
                }if(x.right!=null){
                    q.offer(x.right);
                }
                avg+=x.val;
            }
            double d=avg/n;
            l.add(d);
        }return l;
    }
}
