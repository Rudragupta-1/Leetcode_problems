/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void path2(TreeNode root, int target,List<List<Integer>> ll,List<Integer> l){
        if(root==null){
            return;
        }
        l.add(root.val);
        if(root.left==null && root.right==null && root.val==target){
            ll.add(new ArrayList<>(l));
        }
        else{
        path2(root.left,target-root.val,ll,l);
        path2(root.right,target-root.val,ll,l);
        }
        l.remove(l.size()-1);
    }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ll=new ArrayList<>();
        path2(root,targetSum,ll,new ArrayList<>());
        return ll;
    }
}
