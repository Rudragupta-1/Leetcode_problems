/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<Integer> l=new ArrayList<>();
        List<List<Integer>> ll=new ArrayList<>();
        if(root==null) return ll;
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        
        int reverseVar=0;

        while(!q.isEmpty()){
            int n=q.size();
            List<Integer> l1=new ArrayList<>();
            for(int i=0;i<n;i++)
            {
                TreeNode x=q.poll();            
                l1.add(x.val);
                if(x.left!=null)
                {
                    q.offer(x.left);
                }
                if(x.right!=null)
                {
                    q.offer(x.right);
                }    
            }
           ll.add(l1);
        }       
        for(int i=0;i<ll.size();i++)
        {
            if(i%2!=0)
            {
                Collections.reverse(ll.get(i));
            }
        }
        return ll;
    }
}
