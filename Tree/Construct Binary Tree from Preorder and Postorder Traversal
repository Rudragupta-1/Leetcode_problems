/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int index=0;
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
        int postS=0;
        int postE=postorder.length-1;
        TreeNode root=function(postS,postE,preorder,postorder);
        return root;
    }
    public TreeNode function(int ps,int pe,int[] pre,int[] post){
        if(ps>pe) return null;
        TreeNode root=new TreeNode(pre[index++]);
        if(ps==pe) return root;
        int x=0;
        for(int i=0;i<post.length;i++){
            if(post[i]==pre[index]){
                x=i;
            }
        }
        root.left=function(ps,x,pre,post);
        root.right=function(x+1,pe-1,pre,post);
        return root;
    }
}
