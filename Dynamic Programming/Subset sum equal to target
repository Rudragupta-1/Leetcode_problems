import java.util.* ;
import java.io.*; 
public class Solution {
    
    public static boolean func(int i, int target , int[] arr,int[][] dp){
        if(target==0) return true;
        if(i==0){
            return arr[i]==target;
        }
        if(dp[i][target]!=-1) return dp[i][target]==0?false:true;
        boolean notTake=func(i-1,target,arr,dp);
        boolean take=false;
        if(arr[i]<=target)
        take=func(i-1, target-arr[i],arr,dp);
        dp[i][target]=notTake || take?1:0;
        return take|| notTake;
    }
    public static boolean subsetSumToK(int n, int k, int arr[]){
        // Write your code here.
        int[][] dp=new int[n][k+1];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        return func(n-1,k,arr,dp);
    }
}
