public class Solution {
    public static int minSubsetSumDifference(int []nums, int n) {
        // Write your code here.
         int totSum=0;
        for(int i=0;i<nums.length;i++){
            totSum+=nums[i];
        }
        // int n=nums.length;
        int target=totSum;
        boolean[][] dp=new boolean[n][target+1];
        for(int i=0;i<n;i++) dp[i][0]=true;
        if(nums[0]<=target){
            dp[0][nums[0]]=true;
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<=target;j++){
                boolean notTake=dp[i-1][j];
                boolean take=false;
                if(nums[i]<=j){
                    take=dp[i-1][j-nums[i]];
                }
                dp[i][j]=take || notTake;
            }
        }
        int min=(int)(1e9);
        for(int i=0;i<=target/2;i++){
            if(dp[n-1][i]){
            min=Math.min(min,Math.abs((target-i)-i));
            }
        }
        return min;
    }
}
