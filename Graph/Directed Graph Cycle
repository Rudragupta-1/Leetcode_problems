/*Complete the function below*/

class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        int vis[]=new int[V];
        int path[]=new int[V];
        for(int i=0;i<V;i++){
            if(vis[i]==0){
                if(dfs(i,vis,path,adj)==true){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean dfs(int node,int[] vis, int[] path,ArrayList<ArrayList<Integer>> adj){
        path[node]=1;
        vis[node]=1;
        for(int it:adj.get(node)){
            if(vis[it]==0){
                if(dfs(it,vis,path,adj)==true){
                    return true;
                }
            }
            else if(path[it]==1){
                return true;
            }
        }
        path[node]=0;
        return false;
    }
}
