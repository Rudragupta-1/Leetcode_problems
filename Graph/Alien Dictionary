//User function Template for Java

class Solution
{
    public int[] topoSort(List<List<Integer>> adj,int K){
        int in[]=new int[K];
        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<K;i++){
            for(int it:adj.get(i)){
                in[it]++;
            }
        }
        for(int i=0;i<K;i++){
            if(in[i]==0){
                q.add(i);
            }
        }
        int k=0;
        int topo[]=new int[K];
        while(!q.isEmpty()){
            int x=q.poll();
            topo[k++]=x;
            for(int it:adj.get(x)){
                in[it]--;
                if(in[it]==0){
                    q.add(it);
                }
            }
        }
        return topo;
    }
    public String findOrder(String [] dict, int N, int K)
    {
        List<List<Integer>> adj=new ArrayList<>();
        for(int i=0;i<K;i++){
            adj.add(new ArrayList<>());
        }
        // Write your code here
        for(int i=0;i<dict.length-1;i++){
            String s1=dict[i];
            String s2=dict[i+1];
            int l=Math.min(s1.length(),s2.length());
            for(int j=0;j<l;j++){
                if(s1.charAt(j)!=s2.charAt(j)){
                    adj.get(s1.charAt(j)-'a').add(s2.charAt(j)-'a');
                    break;
                }
            }
        }
        int topo[]=topoSort(adj,K);
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<topo.length;i++){
            sb.append((char)(topo[i]+'a'));
        }
        return sb.toString();
    }
}
