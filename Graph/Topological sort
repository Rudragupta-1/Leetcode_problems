/*Complete the function below*/


class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        int[] in=new int[V];
        int[] topo=new int[V];
        for(int i=0;i<V;i++){
            for(int j:adj.get(i)){
                in[j]++;
            }
        }
        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<V;i++){
            if(in[i]==0){
                q.add(i);
            }
        }
        int p=0;
        while(!q.isEmpty()){
            int x=q.peek();
            q.remove();
            topo[p++]=x;
            for(int g:adj.get(x)){
                in[g]--;
                if(in[g]==0){
                    q.add(g);
                }
            }
        }
        return topo;
    }
}
